---
- name: Upgrade Mikrotik
  hosts: mikrotik
  gather_facts: false
  vars:
    backup_dir: "/home/net_control/backup"
  tasks:
    - name: Check for Update
      routeros_command:
       commands: 
        - /system package update check-for-updates
      register: update_check
      
    - name: Check for version
      routeros_command:
       commands:
        - system/package/print
      register: pre_update_version
    
    - name: Print result
      ansible.builtin.debug: 
       var: update_check
       
    - name: Do the update stuff
      block:
      - name: Run backup first
        import_tasks: mikrotik_backup.yml
    
      - name: Perform the update
        routeros_command:
         commands:
          - system package update install 

      - name: Wait for device to come back online
        wait_for:
         host: "{{ inventory_hostname }}"
         port: 22
         delay: 600
        delegate_to: home-pc
        
      - name: Check for version after update
        routeros_command:
         commands:
          - system/package/print
        register: post_update_version
      
      - name: email results
        community.general.mail:
         host: 192.168.83.3
         port: 25
         to: uros@zajc.net
         from: uzajc@hotmail.com
         subject: Ansible Mikrotik update
         body: |
          Mikrotik has been updated from:
          
          {{ pre_update_version }} 
          
          to:
          
          {{post_update_version }} 
          
          Backup and restart completed too!

          Cheers mate!
          Ansible
        delegate_to: home-pc
      when: update_check is search("New version is available")

#when: variable1 is search("value")
#  when: "variable1.find('v=' ~ value) == -1"
      #when: update_check.stdout.find('New version is available') != -1  
     # when: '"New version is available" in update_check.stdout[0]'
