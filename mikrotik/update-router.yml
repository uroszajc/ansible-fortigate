---
- name: Upgrade Mikrotik
  hosts: mikrotik
  gather_facts: false
  vars:
    backup_dir: "/home/net_control/backup"
  tasks:
    - name: Check for Update
      ansible.builtin.shell: >-
       sshpass -p '{{ ansible_password }}' ssh -o StrictHostKeyChecking=no {{ ansible_user }}@{{ ansible_host }} system/package/update/check-for-updates
      register: update_check
      delegate_to: 192.168.83.89
    - name: Check for version
      ansible.builtin.shell: >-
       sshpass -p '{{ ansible_password }}' ssh -o StrictHostKeyChecking=no {{ ansible_user }}@{{ ansible_host }} system/package/print
      register: pre_update_version
      delegate_to: 192.168.83.89
    
    - name: Print result
      ansible.builtin.debug: 
       var: pre_update_version
    
      block:
      - name: Run backup first
        import_tasks: mikrotik_backup.yml
    
      - name: Pretend to update
        ansible.builtin.shell: >-
         sshpass -p '{{ ansible_password }}' ssh -o StrictHostKeyChecking=no {{ ansible_user }}@{{ ansible_host }} system/package/update/check-for-updates
        
      - name: Check for version after update
        ansible.builtin.shell: >-
         sshpass -p '{{ ansible_password }}' ssh -o StrictHostKeyChecking=no {{ ansible_user }}@{{ ansible_host }} system/package/print
        register: post_update_version
        delegate_to: 192.168.83.89
      
      - name: email results
        community.general.mail:
         host: 192.168.83.3
         port: 25
         to: uros@zajc.net
         from: uzajc@hotmail.com
         subject: Ansible Mikrotik update
         body: Mikrotik has been updated from {{ pre_update_version }} to {{post_update_version }} , backed up and restarted!
        delegate_to: home-pc
        
      when: '"New version is available" in update_check.stdout[0]'
